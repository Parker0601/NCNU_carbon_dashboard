{{#> layouts/main 
    title="工作排程" 
    pagename="manager_schedule"
    heading="工作排程"
    category_1="主管專區"
    pagedescription="查看當日/當週的工作排程"
}}

{{#*inline "head-block"}}
  <!-- 1. FullCalendar 核心样式 -->
  <link rel="stylesheet" media="screen, print" href="css/miscellaneous/fullcalendar/fullcalendar.bundle.css" />
  <!-- 2. FullCalendar Bootstrap 主题样式（如果你用 themeSystem: 'bootstrap'）-->
  <link rel="stylesheet" media="screen, print" href="css/miscellaneous/fullcalendar/fullcalendar.bootstrap.bundle.css" />
  <!-- 3. SweetAlert2 样式 -->
  <link rel="stylesheet" media="screen, print" href="css/notifications/sweetalert2/sweetalert2.bundle.css" />

  <!-- 4. Moment.js（一定要在 fullcalendar JS 之前）-->
  <script src="js/dependency/moment/moment.js"></script>
  <!-- 5. FullCalendar 核心与各插件（dayGrid, timeGrid, list, interaction, bootstrap）-->
  <script src="js/miscellaneous/fullcalendar/fullcalendar.bundle.js"></script>

{{/inline}}

{{#*inline "content-block"}}
  <div class="d-flex justify-content-between align-items-center mb-3">
    <div>
      <button id="btn-calendar-view" class="btn btn-outline-primary btn-sm mr-2 active">日曆檢視</button>
      <button id="btn-list-view" class="btn btn-outline-secondary btn-sm">列表檢視</button>
    </div>
    <h4 class="m-0">本週工作排程</h4>
  </div>
  <div class="row">
    <div class="col-12 col-lg-10 offset-lg-1">
      <div id="calendar-view">
        <div id="panel-3" class="panel">
          <div class="panel-hdr"> 
            <h2 class="js-get-date"></h2>
          </div>
          <div class="panel-container show">
            <div class="panel-content">
              <div id="calendar"></div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
  <div id="list-view" class="list-card" style="display:none;">
    <div class="card-body p-0">
      <table id="schedule-table" class="table table-bordered table-hover w-100 mb-0">
        <thead>
          <tr><th>任務名稱</th><th>時間</th><th>負責人</th><th>狀態</th><th>操作</th></tr>
        </thead>
        <tbody></tbody>
      </table>
    </div>
  </div>
{{/inline}}

{{#*inline "scripts-block"}}
  <!-- 1. jQuery -->
  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <!-- 2. Throttle/Debounce 插件 -->
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-throttle-debounce/1.1/jquery.ba-throttle-debounce.min.js"></script>
  <!-- 3. Bootstrap Bundle -->
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/js/bootstrap.bundle.min.js"></script>
  <!-- 4. SmartAdmin 核心 -->
  <script src="js/app.bundle.js"></script>
  <!-- 5. SweetAlert2 脚本 -->
  <script src="js/notifications/sweetalert2/sweetalert2.bundle.js"></script>

<script>
$(document).ready(function () {
  let calendar = null;
  let currentSchedule = [];

  // ---- 資料取得（改成真實 API 就把下面替換成 fetch/ajax） ----
  function fetchSchedule() {
    // TODO: 換成實際後端呼叫，例如 fetch('/api/manager/schedule')...
    return Promise.resolve([
      { id: 1, title: '廢料處理', start: '2024-06-10T09:00:00', end: '2024-06-10T10:00:00', owner: 'EMP001', status: '待審核', desc: '處理廢料' },
      { id: 2, title: '設備操作', start: '2024-06-10T13:00:00', end: '2024-06-10T14:00:00', owner: 'EMP001', status: '審核完成', desc: '操作機台A' },
      { id: 3, title: '安全檢查', start: '2024-06-11T10:00:00', end: '2024-06-11T11:00:00', owner: 'EMP001', status: '已退回', desc: '檢查安全設施 - 需修改', rejectReason: '資料缺失，請補上安全報告內容' }
    ]).then(data => {
      currentSchedule = data;
      return data;
    });
  }

  // ---- 工具函式 ----
  function escapeHtml(str) {
    return String(str)
      .replaceAll('&', '&amp;')
      .replaceAll('<', '&lt;')
      .replaceAll('>', '&gt;')
      .replaceAll('"', '&quot;')
      .replaceAll("'", '&#39;');
  }

  function statusToCalendarClass(status) {
    if (status === '待審核') return 'bg-warning border-warning text-dark';
    if (status === '審核完成') return 'bg-success border-success text-white';
    if (status === '已退回') return 'bg-danger border-danger text-white';
    return '';
  }

  function badgeClass(status) {
    switch (status) {
      case '待審核': return 'badge-warning';
      case '審核完成': return 'badge-success';
      case '已退回': return 'badge-danger';
      default: return 'badge-secondary';
    }
  }

  function mapToCalendarEvents(schedule) {
    return schedule.map(e => ({
      id: String(e.id),
      title: e.title,
      start: e.start,
      end: e.end,
      className: statusToCalendarClass(e.status),
      extendedProps: { raw: e }
    }));
  }

  // ---- Calendar 初始化與同步 ----
  function initCalendar() {
    if (calendar) return;
    const calendarEl = document.getElementById('calendar');
    calendar = new FullCalendar.Calendar(calendarEl, {
      plugins: ['dayGrid', 'list', 'timeGrid', 'interaction', 'bootstrap'],
      themeSystem: 'bootstrap',
      timeZone: 'UTC',
      buttonText: {
        today: 'today',
        month: 'month',
        week: 'week',
        day: 'day',
        list: 'list'
      },
      eventTimeFormat: {
        hour: 'numeric',
        minute: '2-digit',
        meridiem: 'short'
      },
      navLinks: true,
      header: {
        left: 'title',
        center: '',
        right: 'today prev,next'
      },
      footer: {
        left: 'dayGridMonth,timeGridWeek,timeGridDay,listWeek',
        center: '',
        right: ''
      },
      editable: false,
      eventLimit: true,
      events: function(fetchInfo, successCallback) {
        successCallback(mapToCalendarEvents(currentSchedule));
      },
      eventClick: function(info) {
        const raw = info.event.extendedProps.raw;
        if (raw) showTaskDetail(raw);
      },
      viewSkeletonRender: function() {
        $('.fc-toolbar .btn-default').addClass('btn-sm');
        $('.fc-header-toolbar h2').addClass('fs-md');
        $('#calendar').addClass('fc-reset-order');
      }
    });
    calendar.render();
  }

  function refreshCalendarEvents() {
    if (!calendar) return;
    calendar.removeAllEvents();
    calendar.addEventSource(mapToCalendarEvents(currentSchedule));
  }

  // ---- 狀態更新（同步 list + calendar） ----
  function updateTaskStatus(id, newStatus, extra = {}) {
    const task = currentSchedule.find(t => String(t.id) === String(id));
    if (!task) return;
    task.status = newStatus;
    if (newStatus === '已退回' && extra.rejectReason) {
      task.rejectReason = extra.rejectReason;
    } else if (newStatus !== '已退回') {
      delete task.rejectReason;
    }
    renderList(currentSchedule);
    refreshCalendarEvents();
  }

  // ---- 詳情視窗 ----
  function showTaskDetail(e) {
    let note = '';
    if (e.status === '已退回') {
      note = `<p style="color:#d9534f;"><strong>備註：</strong>此任務已退回給員工，等待重新提交。</p>`;
    }
    let rejectReasonHtml = '';
    if (e.rejectReason) {
      rejectReasonHtml = `
        <p><strong>退回原因：</strong></p>
        <div style="background:#f8d7da; padding:8px; border-radius:4px; color:#842029; margin-bottom:8px;">
          ${escapeHtml(e.rejectReason)}
        </div>
      `;
    }
    Swal.fire({
      title: e.title,
      html: `
        ${note}
        ${rejectReasonHtml}
        <p><strong>描述：</strong>${e.desc}</p>
        <p><strong>負責人：</strong>${e.owner}</p>
        <p><strong>時間：</strong>${e.start.replace('T',' ')} ~ ${e.end.replace('T',' ')}</p>
        <p><strong>狀態：</strong>${e.status}</p>
      `,
      showCloseButton: true,
      showConfirmButton: false
    });
  }

  // ---- 列表渲染 ----
  function renderList(events) {
    const $tb = $('#schedule-table tbody').empty();
    events.forEach(e => {
      let rowClass = '';
      if (e.status === '已退回') rowClass = 'table-danger';
      else if (e.status === '審核完成') rowClass = 'table-success';

      let actionButtons = '';
      if (e.status === '待審核') {
        actionButtons = `
          <button class="btn btn-success btn-sm btn-approve-task" data-id="${e.id}">核准</button>
          <button class="btn btn-danger btn-sm btn-reject-task" data-id="${e.id}">退回</button>
        `;
      }

      $tb.append(`
        <tr class="${rowClass}">
          <td>${e.title}</td>
          <td>${e.start.replace('T',' ').slice(0,16)} ~ ${e.end.replace('T',' ').slice(0,16)}</td>
          <td>${e.owner}</td>
          <td><span class="badge ${badgeClass(e.status)}">${e.status}</span></td>
          <td>
            <button class="btn btn-info btn-sm btn-task-detail" data-id="${e.id}">詳情</button>
            ${actionButtons}
          </td>
        </tr>
      `);
    });
  }

  // ---- 視圖切換 ----
  $('#btn-calendar-view').on('click', function() {
    $(this).addClass('active');
    $('#btn-list-view').removeClass('active');
    $('#calendar-view').show();
    $('#list-view').hide();
    if (!calendar) initCalendar();
  });
  $('#btn-list-view').on('click', function() {
    $(this).addClass('active');
    $('#btn-calendar-view').removeClass('active');
    $('#calendar-view').hide();
    $('#list-view').show();
    fetchSchedule().then(events => {
      renderList(events);
    });
  });

  // ---- 事件代理：核准 / 退回 / 詳情 ----
  $(document).on('click', '.btn-approve-task', function() {
    const id = $(this).data('id');
    Swal.fire({
      title: '核准？',
      text: '是否要將此任務標記為「審核完成」？',
      icon: 'question',
      showCancelButton: true,
      confirmButtonText: '核准'
    }).then(r => {
      if (r.isConfirmed) {
        // TODO: 呼叫後端 API persist 審核完成
        updateTaskStatus(id, '審核完成');
        Swal.fire('已核准並完成','','success');
      }
    });
  });

  $(document).on('click', '.btn-reject-task', function() {
    const id = $(this).data('id');
    Swal.fire({
      title: '退回此任務',
      html: '<label for="reject-reason" class="d-block mb-2">請填寫退回原因：</label>',
      input: 'textarea',
      inputAttributes: {
        id: 'reject-reason',
        'aria-label': '退回原因',
        placeholder: '需要修改的地方是...'
      },
      inputPlaceholder: '請詳述退回原因，讓員工知道要怎麼修改',
      showCancelButton: true,
      confirmButtonText: '退回',
      preConfirm: (reason) => {
        if (!reason || !reason.trim()) {
          Swal.showValidationMessage('退回原因不可為空');
        }
        return reason;
      }
    }).then(r => {
      if (r.isConfirmed) {
        const reason = r.value.trim();
        // TODO: 呼叫後端 API 退回並附上 reason
        updateTaskStatus(id, '已退回', { rejectReason: reason });
        Swal.fire({
          title: '已退回給員工',
          html: `<p>原因：</p><div style="text-align:left; background:#f8d7da; padding:8px; border-radius:4px; color:#842029;">${escapeHtml(reason)}</div>`,
          icon: 'info'
        });
      }
    });
  });

  $(document).on('click', '.btn-task-detail', function() {
    const id = $(this).data('id');
    const e = currentSchedule.find(x => String(x.id) === String(id));
    if (e) showTaskDetail(e);
  });

  // ---- 初始載入 ----
  fetchSchedule().then(() => {
    renderList(currentSchedule);
    initCalendar();
  });
});
</script>
{{/inline}}

{{/layouts/main}}